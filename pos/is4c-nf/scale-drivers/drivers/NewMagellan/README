Make sure ss-output is writable by the driver:
$ sudo chmod -R 777 ss-output

Check the assignment of MAGELLAN_OUTPUT_DIR in SPH_Magellan_Scale.cs
$ grep MAGELLAN_OUTPUT_DIR SPH_Magellan_Scale.cs
It should be "ss-output/", the same as the directory above.

If it isn't, open SPH_Magellan_Scale.cs in a text editor and change it.
Then re-compile pos.exe:
$ make clean
$ make

Even if it didn't need to be changed the driver needs to be compiled,
i.e. the executable pos.exe is not part of the distribution:
$ make clean
$ make

Indicate which ports, i.e. which peripheral devices are being monitored.
Edit ports.conf and uncomment (remove the leading "#" from) and change,
or add, as necessary the lines such as:
# <name of port> <name of handler class>
#	
# typical linux config, scanner/scale
/dev/ttyS0 SPH_Magellan_Scale

But leave lines for devices you aren't using commented:
# typical linux config, USB IDtech
#/dev/hidraw0	SPH_SignAndPay_USB

Run the driver in the foreground:
$ sudo mono pos.exe -v
If it starts OK it will immediately say:
Reading serial data
and there may be another line of scale or scanner data such as S110000

Now scan a barcode. It should be echoed to the window running pos.exe. E.g.:
03120044618
Then put something on the scale. Expect to see something like:
S110023
where "23" is the weight, 23/100ths of a pound in this case.
Remove the thing from the scale and two more lines will probably appear:
S141
S1100000
RECV FROM SCALE: S143
PASS TO POS: S110000
the second indicating the scale is back to zero.
To stop the driver type:
^C
or
exit

You can run the driver in the foreground and use the PoS at the same time.
The items you scan and weigh (if you also enter product codes) will appear
in the transaction in the usual way.

The driver launch script posdriver-sph is set not non-verbose mode for
production use because the logfile can grow very large.  You can change
it to verbose for debugging.  Be sure to re-install the version you
want to run at boot, possibly with:
$ posd swap

A second attempt to run the driver in the foreground may get a message like:
$ sudo mono pos.exe -v

Unhandled Exception: System.NullReferenceException: Object reference not set to an instance of an object
  at System.TermInfoDriver.CheckWindowDimensions () [0x00000] 
  at System.TermInfoDriver.get_WindowWidth () [0x00000] 
  at System.TermInfoDriver.IncrementX () [0x00000] 
  at System.TermInfoDriver.IsSpecialKey (ConsoleKeyInfo key) [0x00000] 
  at System.TermInfoDriver.IsSpecialKey (Char c) [0x00000] 
  at System.IO.CStreamWriter.Write (System.Char[] buffer, Int32 index, Int32 count) [0x00000] 
  at System.IO.CStreamWriter.Write (System.Char[] val) [0x00000] 
  at System.IO.CStreamWriter.Write (System.String val) [0x00000] 
  at System.IO.TextWriter.WriteLine (System.String value) [0x00000] 
  at System.IO.SynchronizedWriter.WriteLine (System.String value) [0x00000] 
  at System.Console.WriteLine (System.String value) [0x00000] 
  at SPH.SPH_Magellan_Scale.Read () [0x00000] 

I don't know what to do about this.
Doing again gets the same message.
Start the driver in the background, do a couple scans, stop it;
then running it in foreground may work again.

Open another terminal window and go to ss-ouput.
$ls -l will show something like:
-rwxrwxrwx 1 nobody   nogroup     8 2012-10-27 17:14 13930410
-rw-r--r-- 1 root     root        8 2012-10-27 17:34 15184740
-rw-r--r-- 1 root     root       12 2012-10-27 17:35 15206202
-rw-r--r-- 1 root     root       12 2012-10-27 17:35 15210526
-rw-r--r-- 1 root     root        8 2012-10-27 17:35 15216206
-rw-r--r-- 1 root     root        5 2012-10-27 17:35 15217402

Files contain output like that echoed to the screen, without the LABELS:.
There may be no files if the driver has been doing effective housekeeping,
but the datestamp on the directory will be recent if the scanner/scale
is active.

While the driver is running in the background,
scan and scale events are, if the -v option was used, also logged to
a file named in the driver start script, posdriver-sph, for example:
/var/run/posdriver-sph/pos.log
You can watch this as it accumulates with:
$ tail -f /var/run/posdriver-sph/pos.log
Reading serial data
Received: rePoll
RECV FROM SCALE: S143
PASS TO POS: S110000
Received: goodBeep
RECV FROM SCALE: S08A88904400002
PASS TO POS: 88904400002
Received: goodBeep
RECV FROM SCALE: S110029
RECV FROM SCALE: S1440029
PASS TO POS: S110029
RECV FROM SCALE: S1440029
...
